#include<iostream.h>

const int GetPrize(const int (&Card_int)[5])
{

/* ------------------------ 判断手牌 ------------------------ */

int count1 = 0,count2 = 0,count3 = 0,prize = 0,minnum = 53,maxnum = 0;
int temp1 = 0,temp2 = 0,temp3 = 0,mintemp = 53,maxtemp = 0,temp[5];

for(int i=0;i<5;i++)
	{
	for(int j=0;j<5;j++)
		{
		if(Card_int[i]-Card_int[j]==13){count1++;}
		if(Card_int[i]-Card_int[j]==26){count2++;}
		if(Card_int[i]-Card_int[j]==39){count3++;}
		}
	}//得到有几张同号的牌

for(int k=0;k<5;k++){if(Card_int[k]>maxnum)maxnum = Card_int[k];}//最大手牌
for(int n=0;n<5;n++){if(Card_int[n]<minnum)minnum = Card_int[n];}//最小手牌

if(maxnum < 14)temp1 = 1;
else if(maxnum < 27 && minnum > 13)temp1 = 1;
else if(maxnum < 40 && minnum > 26)temp1 = 1;
else if(minnum > 39)temp1 = 1;
else temp1 = 0;//判断是否同花

for(int q=0;q<5;q++)
	{
	if(Card_int[q]<14){temp[q] = Card_int[q];}
	else if(Card_int[q]>13 && Card_int[q]<27){temp[q] = Card_int[q]-13;}
	else if(Card_int[q]>26 && Card_int[q]<40){temp[q] = Card_int[q]-26;}
	else {temp[q] = Card_int[q]-39;}
	}
for(int r=0;r<5;r++){if(temp[r]>maxtemp)maxtemp = temp[r];}
for(int t=0;t<5;t++){if(temp[t]<mintemp)mintemp = temp[t];}
if(maxtemp - mintemp == 4){temp2 = 1;}//判断是否顺子

////////////////////////////////////////// DEBUG
cout<<"minnum: "<<minnum<<"    maxnum: "<<maxnum<<endl;
cout<<"count1: "<<count1<<"    count2: "<<count2<<"    count3: "<<count3<<endl;
////////////////////////////////////////// DEBUG

/* ------------------------ 返回结果 ------------------------ */

if(temp1 == 1 && temp2 == 1)
	{
	if(minnum == 9 || minnum == 22 || minnum == 35 || minnum == 48)return 9;//同花大顺
	else return 8;//同花顺 
	}
if(count1 == 3 && count2 == 2 && count3 == 1){return 7;}//四同 
if(count1 == 3 && count2 == 1 && count3 == 0){return 6;}//葫芦 
	else if(count1 == 2 && count2 == 1 && count3 == 1){return 6;}
	else if(count1 == 2 && count2 == 2 && count3 == 0){return 6;}
	else if(count1 == 1 && count2 == 2 && count3 == 1){return 6;}
	else if(count1 == 1 && count2 == 1 && count3 == 2){return 6;}
if(temp1 == 1){return 5;}//同花 
if(temp2 == 1){return 4;}//顺子 
if(count1 == 2 && count2 == 1 && count3 == 0){return 3;}//三同 
	else if(count1 == 1 && count2 == 1 && count3 == 1){return 3;}
if(count1 == 2 && count2 == 0 && count3 == 0){return 2;}//两对 
	else if(count1 == 1 && count2 == 1 && count3 == 0){return 2;}
	else if(count1 == 1 && count2 == 0 && count3 == 1){return 2;}
	else if(count1 == 0 && count2 == 2 && count3 == 0){return 2;}
	else if(count1 == 0 && count2 == 1 && count3 == 1){return 2;}
	else if(count1 == 0 && count2 == 0 && count3 == 2){return 2;}
	if(count1 == 1 && count2 == 0 && count3 == 0){temp3 = 1;}//一对 
else if(count1 == 0 && count2 == 1 && count3 == 0){temp3 = 1;}
else if(count1 == 0 && count2 == 0 && count3 == 1){temp3 = 1;}
if(temp3 == 1)
	{
	for(int m=0;m<5;m++)
		{
		for(int p=0;p<5;p++)
			{
			if(Card_int[m]==Card_int[p])
				{
				if(Card_int[p] > 9 && Card_int[p] < 14
					|| Card_int[p] > 22 && Card_int[p] < 27
					|| Card_int[p] > 35 && Card_int[p] < 40
					|| Card_int[p] > 48){return 1;}//J以上 
				}
			}
		}
	}
return 0;//没有中奖
}


void SwitchCard(count int Card_i,char (&Card_c)[3])//不是Card_int[5]&Card_char[5]
{
switch(Card_i)
	{
	case 1: fstream(Card_c,"2") break; // ^ô^ ■□▲△◆◇¤○●▼▽★☆ФξЖЮЯЁджθΘΩ 
	case 2:
	case 3:
	case 4:
	case 5:
	case 6:
	case 7:
	case 8:
	case 9:
	case 10:
	case 11:
	case 12:
	case 13:
	case 14:
	case 15:
	case 16:
	case 17:
	case 18:
	case 19:
	case 20:
	case 21:
	case 22:
	case 23:
	case 24:
	case 25:
	case 26:
	case 27:
	case 28:
	case 29:
	case 30:
	case 31:
	case 32:
	case 33:
	case 34:
	case 35:
	case 36:
	case 37:
	case 38:
	case 39:
	case 40:
	case 41:
	case 42:
	case 43:
	case 44:
	case 45:
	case 46:
	case 47:
	case 48:
	case 49:
	case 50:
	case 51:
	case 52:
	defause:
	}
}


/*
  — 休闲益智游戏 —               LuckPock V1.0.0
                        
  　—┼—     ●  -—       │   │    ——┼——
  —●┴○—   -┐-┬—     -○-  │    ┌—┴—┐
    —┬—     ／ ◎         │   ◎-   └┬—┬┘
  ——┼——   ＼ └—◎     ／   │      │  │○
      │       ○———-   ●│   │     ●   └┘
*/

void main ()
{
for(;;){
int Card_int[5];
cout<<"Begin\nput1: ";
cin>>Card_int[0];
cout<<"put2: ";
cin>>Card_int[1];
cout<<"put3: ";
cin>>Card_int[2];
cout<<"put4: ";
cin>>Card_int[3];
cout<<"put5: ";
cin>>Card_int[4];
int prize = GetPrize(Card_int);
cout<<"\n"<<prize<<'\n'<<endl;
}
}

